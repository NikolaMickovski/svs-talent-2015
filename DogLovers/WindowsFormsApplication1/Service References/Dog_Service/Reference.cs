//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1.Dog_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Dog_Service.IDog")]
    public interface IDog {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/GetListOfDogs", ReplyAction="http://tempuri.org/IDog/GetListOfDogsResponse")]
        DogLovers.DogID[] GetListOfDogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/GetListOfDogs", ReplyAction="http://tempuri.org/IDog/GetListOfDogsResponse")]
        System.Threading.Tasks.Task<DogLovers.DogID[]> GetListOfDogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/CompatibleMatch", ReplyAction="http://tempuri.org/IDog/CompatibleMatchResponse")]
        bool CompatibleMatch(DogLovers.DogID a, DogLovers.DogID b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/CompatibleMatch", ReplyAction="http://tempuri.org/IDog/CompatibleMatchResponse")]
        System.Threading.Tasks.Task<bool> CompatibleMatchAsync(DogLovers.DogID a, DogLovers.DogID b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/CompatibleMatchByBreedAndBirth", ReplyAction="http://tempuri.org/IDog/CompatibleMatchByBreedAndBirthResponse")]
        bool CompatibleMatchByBreedAndBirth(string breed1, System.DateTime day1, string breed2, System.DateTime day2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDog/CompatibleMatchByBreedAndBirth", ReplyAction="http://tempuri.org/IDog/CompatibleMatchByBreedAndBirthResponse")]
        System.Threading.Tasks.Task<bool> CompatibleMatchByBreedAndBirthAsync(string breed1, System.DateTime day1, string breed2, System.DateTime day2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDogChannel : WindowsFormsApplication1.Dog_Service.IDog, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DogClient : System.ServiceModel.ClientBase<WindowsFormsApplication1.Dog_Service.IDog>, WindowsFormsApplication1.Dog_Service.IDog {
        
        public DogClient() {
        }
        
        public DogClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DogClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DogClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DogClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DogLovers.DogID[] GetListOfDogs() {
            return base.Channel.GetListOfDogs();
        }
        
        public System.Threading.Tasks.Task<DogLovers.DogID[]> GetListOfDogsAsync() {
            return base.Channel.GetListOfDogsAsync();
        }
        
        public bool CompatibleMatch(DogLovers.DogID a, DogLovers.DogID b) {
            return base.Channel.CompatibleMatch(a, b);
        }
        
        public System.Threading.Tasks.Task<bool> CompatibleMatchAsync(DogLovers.DogID a, DogLovers.DogID b) {
            return base.Channel.CompatibleMatchAsync(a, b);
        }
        
        public bool CompatibleMatchByBreedAndBirth(string breed1, System.DateTime day1, string breed2, System.DateTime day2) {
            return base.Channel.CompatibleMatchByBreedAndBirth(breed1, day1, breed2, day2);
        }
        
        public System.Threading.Tasks.Task<bool> CompatibleMatchByBreedAndBirthAsync(string breed1, System.DateTime day1, string breed2, System.DateTime day2) {
            return base.Channel.CompatibleMatchByBreedAndBirthAsync(breed1, day1, breed2, day2);
        }
    }
}
